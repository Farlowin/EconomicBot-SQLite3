import disnake
from disnake.ext import commands

from utils import database


class UserCommands(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        self.db = database.DataBase()

    @commands.command(
        name="–±–∞–ª–∞–Ω—Å",
        aliases=["cash", "balance", "–¥–µ–Ω—å–≥–∏"],
        brief="–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        usage="balance <@user=None>"
    )
    async def user_balance(self, ctx, member: disnake.Member=None):
        balance = await self.db.get_data(ctx.author)
        embed = disnake.Embed(description=f"–ë–∞–ª–∞–Ω—Å *{ctx.author}*: {balance['balance']}")

        if member is not None:
            balance = await self.db.get_data(member)
            embed.description = f"–ë–∞–ª–∞–Ω—Å *{member}*: {balance['balance']}"
        await ctx.send(embed=embed)

    @commands.command(
        name="–Ω–∞–≥—Ä–∞–¥–∏—Ç—å",
        aliases=["award"],
        brief="–ù–∞–≥—Ä–∞–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É–º–º–æ–π –¥–µ–Ω–µ–≥",
        usage="award <@user> <amount>"
    )
    async def award_user(self, ctx, member: disnake.Member, amount: int):
        if amount < 1:
            await ctx.send("–°—É–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ 1")
        else:
            await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", [amount, member.id, ctx.guild.id])
            await ctx.message.add_reaction("üíñ")

    @commands.command(
        name="–∑–∞–±—Ä–∞—Ç—å",
        aliases=["take", "–æ—Ç–Ω—è—Ç—å"],
        brief="–ó–∞–±—Ä–∞—Ç—å —Å—É–º–º—É –¥–µ–Ω–µ–≥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        usage="take <@user> <amount (int or all)>"
    )
    async def take_cash(self, ctx, member: disnake.Member, amount):
        if amount == "all":
            await self.db.update_member("UPDATE users SET balance = ? WHERE member_id = ? AND guild_id = ?", [0, member.id, ctx.guild.id])
        elif int(amount) < 1:
            await ctx.send("–°—É–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ 1")
        else:
            await self.db.update_member("UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", [amount, member.id, ctx.guild.id])

        await ctx.message.add_reaction("üíñ")

    @commands.command(
        name="–ø–µ—Ä–µ–≤–µ—Å—Ç–∏",
        aliases=["pay", "transfer", "–ø–µ—Ä–µ–≤–æ–¥"],
        brief="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
        usage="pay <@user> <amount>"
    )
    async def pay_cash(self, ctx, member: disnake.Member, amount: int):
        balance = await self.db.get_data(member)

        if amount > balance["balance"]:
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
        elif amount <= 0:
            await ctx.send("–°—É–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ 1")
        else:
            await self.db.update_member("UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", [amount, ctx.author.id, ctx.guild.id])
            await self.db.update_member("UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?",  [amount, member.id, ctx.guild.id])

        await ctx.message.add_reaction("üíñ")

    @commands.command(
        name="+—Ä–µ–ø—É—Ç–∞—Ü–∏—è",
        aliases=["rep", "+rep", "—Ä–µ–ø", "—Ä–µ–ø—É—Ç–∞—Ü–∏—è"],
        brief="–†–µ—Å–ø–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
        usage="rep <@user>"
    )
    async def reputation(self, ctx, member: disnake.Member):
        if member.id == ctx.author.id:
            await ctx.send("–ù–µ–ª—å–∑—è –≤—ã–¥–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–µ–±–µ")
        else:
            await self.db.update_member("UPDATE users SET reputation = reputation + ? WHERE member_id = ? AND guild_id = ?", [1, member.id, ctx.guild.id])
            await ctx.message.add_reaction("üíñ")

    @commands.command(
        name="–ª–∏–¥–µ—Ä—ã",
        aliases=["leaders", "leadersboard", "–ª–∏–¥–µ—Ä", "top"],
        brief="–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"
    )
    async def server_leadersboard(self, ctx):
        embed = disnake.Embed(title="–¢–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞")
        counter = 0

        data = await self.db.get_data(ctx.guild.id, all_data=True, filters="ORDER BY balance DESC LIMIT 10")
        for row in data:
            counter += 1
            embed.add_field(
                name=f"#{counter} | `{self.bot.get_user(row['member_id'])}`",
                value=f"–ë–∞–ª–∞–Ω—Å: {row['balance']}",
                inline=False
            )

        await ctx.send(embed=embed)

def setup(bot):
    bot.add_cog(UserCommands(bot))
